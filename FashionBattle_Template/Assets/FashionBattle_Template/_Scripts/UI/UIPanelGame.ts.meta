fileFormatVersion: 2
guid: 441dec9056cb28e468f67a3d9a32ff01
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    ZEPETO_Character_Controller_1 = require(\"ZEPETO.Character.Controller\");\r\nconst
    VoteButton_1 = require(\"./VoteButton\");\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    MultiplayerManager_1 = require(\"../Multiplayer/MultiplayerManager\");\r\nconst
    GameManager_1 = require(\"../Managers/GameManager\");\r\nconst UnityEngine_UI_1
    = require(\"UnityEngine.UI\");\r\n// This class controls the view of the game
    panel\r\nclass UIPanelGame extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n   
    constructor() {\r\n        super(...arguments);\r\n        this._isLocalPlayerVoting
    = false;\r\n        this.isTimerRunning = true; // Indicate whether the timer
    is currently running.\r\n        this.voteTimerCounter = 0; // A counter for
    the voting timer.\r\n    }\r\n    // Start is called on the frame when a script
    is enabled just before any of the Update methods is called the first time\r\n   
    Start() {\r\n        // Set the maximum value of the time slider to the vote
    timer limit defined in GameManager.\r\n        this.timeSlider.maxValue = GameManager_1.default.instance.voteTimerLimit;\r\n   
    }\r\n    // Update is called every frame, if the MonoBehaviour is enabled\r\n   
    Update() {\r\n        if (this.isTimerRunning) // Check if the voting timer is
    currently running.\r\n         {\r\n            // Decrease the vote timer counter
    by the elapsed time since the last frame.\r\n            this.voteTimerCounter
    -= UnityEngine_1.Time.deltaTime;\r\n            // Update the time slider''s
    value to reflect the remaining time.\r\n            this.timeSlider.value = this.voteTimerCounter;\r\n           
    // Check if the voting timer is <= zero.\r\n            if (this.voteTimerCounter
    <= 0) {\r\n                this.isTimerRunning = false; // Stop the timer\r\n               
    this.timeSlider.value = 0; // Set the time slider''s value to zero.\r\n               
    this.OnFinishVoting(); // Call the method to handle finishing the voting process.\r\n           
    }\r\n        }\r\n    }\r\n    // This method is used to update to next player
    to vote\r\n    SetNextPlayerToVote(playerId) {\r\n        // Update the ID of
    the current player to be displayed.\r\n        this.currentPlayerIdShowed = playerId;\r\n       
    // Set the player''s name in the UI text element.\r\n        this.playerNameTxt.text
    = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(playerId).name;
    // Change by PlayerName\r\n        // Start the voting timer.\r\n        this.isTimerRunning
    = true;\r\n        //The vote timer counter to the maximum vote timer limit.\r\n       
    this.voteTimerCounter = GameManager_1.default.instance.voteTimerLimit;\r\n       
    // Default Vote\r\n        this.SetVoteSelection(0);\r\n    }\r\n    // This
    method is used to show or hide stars in voting panel\r\n    SetVoteSelection(voteIndex)
    {\r\n        this.voteButtons.forEach((element) => {\r\n            // We obtain
    the VoteButton component\r\n            let voteButton = element.GetComponent($typeof(VoteButton_1.default));\r\n           
    // Check if button index is same or minor of vote index value\r\n           
    if (voteButton.buttonIndex <= voteIndex) {\r\n                //If correct, show
    a star\r\n                voteButton.SetSelectedImg(true);\r\n            }\r\n           
    else {\r\n                //If not a correct, hide a star\r\n               
    voteButton.SetSelectedImg(false);\r\n            }\r\n        });\r\n       
    // Call the function OnVoteSelection with vote index value\r\n        this.OnVoteSelection(voteIndex);\r\n   
    }\r\n    // This method pass the selected vote index and the current player''s
    ID to the multiplayer manager for voting data.\r\n    OnVoteSelection(voteIndex)
    {\r\n        if (!this._isLocalPlayerVoting) {\r\n            MultiplayerManager_1.default.instance.SetVotingData(voteIndex,
    this.currentPlayerIdShowed);\r\n        }\r\n    }\r\n    // This method is used
    to show or hide the voting panel\r\n    SetVotingPanel(value) {\r\n        this._isLocalPlayerVoting
    = !value;\r\n        this.votingPanel.SetActive(value);\r\n    }\r\n    // This
    method is called on finish voting\r\n    OnFinishVoting() {\r\n        // Call
    the function OnCurrentVotingFinish\r\n        GameManager_1.default.instance.OnCurrentVotingFinish();\r\n   
    }\r\n}\r\nexports.default = UIPanelGame;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlQYW5lbEdhbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJVSVBhbmVsR2FtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlEQUFzRDtBQUN0RCw2RUFBNEQ7QUFFNUQsNkNBQXNDO0FBQ3RDLDZDQUFzRDtBQUN0RCwwRUFBbUU7QUFFbkUseURBQWtEO0FBQ2xELG1EQUFnRDtBQUVoRCxpREFBaUQ7QUFDakQsTUFBcUIsV0FBWSxTQUFRLHFDQUFxQjtJQUE5RDs7UUFlVSx5QkFBb0IsR0FBUyxLQUFLLENBQUM7UUFFakIsbUJBQWMsR0FBWSxJQUFJLENBQUMsQ0FBQyxtREFBbUQ7UUFDbkYscUJBQWdCLEdBQVcsQ0FBQyxDQUFDLENBQUMsa0NBQWtDO0lBa0c1RixDQUFDO0lBaEdDLHVIQUF1SDtJQUN2SCxLQUFLO1FBRUgsMkZBQTJGO1FBQzNGLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxHQUFHLHFCQUFXLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQztJQUNqRSxDQUFDO0lBRUQsZ0VBQWdFO0lBQ2hFLE1BQU07UUFFSixJQUFJLElBQUksQ0FBQyxjQUFjLEVBQUUsa0RBQWtEO1NBQzNFO1lBQ0MsNEVBQTRFO1lBQzNFLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxrQkFBSSxDQUFDLFNBQVMsQ0FBQztZQUV4QyxnRUFBZ0U7WUFDaEUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1lBRTNDLHdDQUF3QztZQUMzQyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLEVBQzlCO2dCQUNFLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLENBQUMsaUJBQWlCO2dCQUM5QyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyx1Q0FBdUM7Z0JBQ2xFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQyxDQUFFLDBEQUEwRDthQUNuRjtTQUNGO0lBQ0gsQ0FBQztJQUVELHVEQUF1RDtJQUNoRCxtQkFBbUIsQ0FBQyxRQUFnQjtRQUUxQyx1REFBdUQ7UUFDdEQsSUFBSSxDQUFDLHFCQUFxQixHQUFHLFFBQVEsQ0FBQztRQUVyQyxnREFBZ0Q7UUFDakQsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEdBQUcsMkNBQWEsQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLHVCQUF1QjtRQUVqRywwQkFBMEI7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFFMUIseURBQXlEO1FBQzFELElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUM7UUFFNUQsZUFBZTtRQUNmLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsNERBQTREO0lBQ3JELGdCQUFnQixDQUFDLFNBQWlCO1FBRXZDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFFbkMscUNBQXFDO1lBQ3JDLElBQUksVUFBVSxHQUFHLE9BQU8sQ0FBQyxZQUFZLFNBQUMsb0JBQVUsRUFBRyxDQUFDO1lBRXBELDZEQUE2RDtZQUM3RCxJQUFJLFVBQVUsQ0FBQyxXQUFXLElBQUksU0FBUyxFQUN2QztnQkFDRSx5QkFBeUI7Z0JBQ3pCLFVBQVUsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDakM7aUJBQ0Q7Z0JBQ0UsK0JBQStCO2dCQUMvQixVQUFVLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ2xDO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCwwREFBMEQ7UUFDMUQsSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUEsbUhBQW1IO0lBQzdHLGVBQWUsQ0FBQyxTQUFpQjtRQUV0QyxJQUFHLENBQUMsSUFBSSxDQUFDLG9CQUFvQixFQUM3QjtZQUNFLDRCQUFrQixDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQ3ZDLFNBQVMsRUFDVCxJQUFJLENBQUMscUJBQXFCLENBQzNCLENBQUM7U0FDSDtJQUNILENBQUM7SUFFRCx1REFBdUQ7SUFDaEQsY0FBYyxDQUFDLEtBQVc7UUFFL0IsSUFBSSxDQUFDLG9CQUFvQixHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ25DLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCx5Q0FBeUM7SUFDbEMsY0FBYztRQUVuQiwwQ0FBMEM7UUFDMUMscUJBQVcsQ0FBQyxRQUFRLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUMvQyxDQUFDO0NBQ0Y7QUFwSEQsOEJBb0hDIn0=","assetPath":"Assets/FashionBattle_Template/_Scripts/UI/UIPanelGame.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"currentPlayerIdShowed","type":"System.String","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"UnityEngine.UI","name":"voteButtons","type":"UnityEngine.UI.Button[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Vote
    Buttons\""]}]},{"assembly":"UnityEngine.UI","name":"timeSlider","type":"UnityEngine.UI.Slider","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Time
    Slider\""]}]},{"assembly":"ZEPETO.World.Gui","name":"playerNameTxt","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Player
    Name Txt\""]}]},{"assembly":"UnityEngine.CoreModule","name":"votingPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"isTimerRunning","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"voteTimerCounter","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]}],"name":"UIPanelGame","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: e29d8fa0270e13ca1f3706939b2d168b
  onlyWriteTrigger: 0
