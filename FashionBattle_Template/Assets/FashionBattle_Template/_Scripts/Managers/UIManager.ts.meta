fileFormatVersion: 2
guid: 5e3a5b19c3aa80745b3d605121e2690e
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.UIPanelType = void 0;\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst UIPanel_1 = require(\"../UI/UIPanel\");\r\nconst
    UIPanelStart_1 = require(\"../UI/UIPanelStart\");\r\nconst UIPanelGame_1 = require(\"../UI/UIPanelGame\");\r\nconst
    UIPanelEnd_1 = require(\"../UI/UIPanelEnd\");\r\nconst UIPanelCustomization_1
    = require(\"../UI/UIPanelCustomization\");\r\nconst UIPanelTheme_1 = require(\"../UI/UIPanelTheme\");\r\nvar
    UIPanelType;\r\n(function (UIPanelType) {\r\n    UIPanelType[UIPanelType[\"START\"]
    = 0] = \"START\";\r\n    UIPanelType[UIPanelType[\"LOBBY\"] = 1] = \"LOBBY\";\r\n   
    UIPanelType[UIPanelType[\"GAME\"] = 2] = \"GAME\";\r\n    UIPanelType[UIPanelType[\"CUSTOMIZATION\"]
    = 3] = \"CUSTOMIZATION\";\r\n    UIPanelType[UIPanelType[\"END\"] = 4] = \"END\";\r\n   
    UIPanelType[UIPanelType[\"NONE\"] = 5] = \"NONE\";\r\n})(UIPanelType = exports.UIPanelType
    || (exports.UIPanelType = {}));\r\nclass UIManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.currentPanelType
    = UIPanelType.NONE; // This variable saves the current panel type\r\n    }\r\n   
    // Awake is called when an enabled script instance is being loaded.\r\n    Awake()
    {\r\n        // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIManager.instance = this;\r\n    }\r\n    // This method
    is responsible for starting all systems\r\n    Init() {\r\n        this.uiPanels
    = []; //First start the array\r\n        for (var i = 0; i < this.uiPanelsGameObject.length;
    i++) {\r\n            //Then, get the reference of the scripts of each panel
    in the scene\r\n            this.uiPanels[i] = this.uiPanelsGameObject[i].GetComponent($typeof(UIPanel_1.default));\r\n       
    }\r\n    }\r\n    // This method is used to update the next player to vote\r\n   
    SetNewxtPlayerToVote(playerId) {\r\n        // We obtain the component UIPanelGame\r\n       
    let gamePanel = this.GetUiPanelType(UIPanelType.GAME).GetComponent($typeof(UIPanelGame_1.default));\r\n       
    // Call the function SetNextPlayerToVote with the player identifier value\r\n       
    gamePanel.SetNextPlayerToVote(playerId);\r\n    }\r\n    // This method is used
    to update the winner data\r\n    SetWinnerPanelData(winnername, winnerscore)
    {\r\n        // We obtain the component UIPanelEnd\r\n        let endPanel =
    this.GetUiPanelType(UIPanelType.END).GetComponent($typeof(UIPanelEnd_1.default));\r\n       
    // Call the function SetEndPanelData with the winner name and winner score value\r\n       
    endPanel.SetEndPanelData(winnername, winnerscore);\r\n    }\r\n    // This method
    is used to show loading panel\r\n    SetLoadingPanel(value) {\r\n        // We
    obtain the component UIPanelCustomization\r\n        let customizationPanel =
    this.GetUiPanelType(UIPanelType.CUSTOMIZATION).GetComponent($typeof(UIPanelCustomization_1.default));\r\n       
    // Call the function SetLoadingPanel with the new value\r\n        customizationPanel.SetLoadingPanel(value);\r\n   
    }\r\n    // This method is used to show voting panel\r\n    SetVotingPanel(value)
    {\r\n        // We obtain the component UIPanelGame\r\n        let gamePanel
    = this.GetUiPanelType(UIPanelType.GAME).GetComponent($typeof(UIPanelGame_1.default));\r\n       
    // Call the function SetVotingPanel with the new value\r\n        gamePanel.SetVotingPanel(value);\r\n   
    }\r\n    // This mehod is used when click on start button\r\n    OnStartButton()
    {\r\n        // Call the function SwitchUIPanel with value CUSTOMIZATION\r\n       
    this.SwitchUIPanel(UIPanelType.CUSTOMIZATION);\r\n    }\r\n    //This method
    reset the Customization panel\r\n    ResetCustomizationPanel() {\r\n        //
    We obtain the component UIPanelCustomization\r\n        let customizationPanel
    = this.GetUiPanelType(UIPanelType.CUSTOMIZATION).GetComponent($typeof(UIPanelCustomization_1.default));\r\n       
    // Call the function ResetPanel\r\n        customizationPanel.ResetPanel();\r\n   
    }\r\n    //This method reset the Start panel\r\n    ResetStartPanel() {\r\n       
    // We obtain the component UIPanelStart\r\n        let startPanel = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function ResetPanel\r\n        startPanel.ResetPanel();\r\n       
    let themePanel = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelTheme_1.default));\r\n       
    // Call the function ResetPanel\r\n        themePanel.ResetThemePanel();\r\n   
    }\r\n    // This method is used to update the counter to start game\r\n    SetCounterToStart(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function ShowCountdownText with the new value\r\n        startPanel.ShowCountdownText(value);\r\n   
    }\r\n    // This method is used to set all players in game\r\n    SetPlayersOnline(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetPlayersCount with the new value\r\n        startPanel.SetPlayersCount(value);\r\n   
    }\r\n    // This method is used to set all ready players\r\n    SetPlayersReady(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetPlayersReady with the new value\r\n        startPanel.SetPlayersReady(value);\r\n   
    }\r\n    // This method is used to set ready button interactable\r\n    SetReadyButtonInteractable()
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetReadyButtonInteractable\r\n        startPanel.SetReadyButtonInteractable();\r\n   
    }\r\n    //This method controls the visual panels, recive the UIPanelType and
    find it in all panels for activate.\r\n    SwitchUIPanel(uiPanelType) {\r\n       
    //We change the current panel type for the new one\r\n        this.currentPanelType
    = uiPanelType;\r\n        //We go through all the references of the ui panels\r\n       
    for (var i = 0; i < this.uiPanels.length; i++) {\r\n            //Check if the
    type in \"i\" is the same as the new one\r\n            if (this.uiPanels[i].uiPanelType
    == uiPanelType) {\r\n                //If it is correct, activate the panel with
    the corresponding type\r\n                this.uiPanels[i].Show(true);\r\n           
    }\r\n            else {\r\n                //If it is not correct, deactivate
    the panel\r\n                this.uiPanels[i].Show(false);\r\n            }\r\n       
    }\r\n    }\r\n    //This method returns a panel with the correct UIPanel type\r\n   
    GetUiPanelType(uiPanelType) {\r\n        let result = this.uiPanels[i];\r\n       
    for (var i = 0; i < this.uiPanels.length; i++) {\r\n            if (this.uiPanels[i].uiPanelType
    == uiPanelType) {\r\n                result = this.uiPanels[i];\r\n           
    }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = UIManager;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUErQztBQUMvQyxpREFBcUQ7QUFDckQsMkNBQW9DO0FBQ3BDLHFEQUE4QztBQUM5QyxtREFBNEM7QUFDNUMsaURBQTBDO0FBQzFDLHFFQUE4RDtBQUM5RCxxREFBOEM7QUFFOUMsSUFBWSxXQVFYO0FBUkQsV0FBWSxXQUFXO0lBRW5CLCtDQUFLLENBQUE7SUFDTCwrQ0FBSyxDQUFBO0lBQ0wsNkNBQUksQ0FBQTtJQUNKLCtEQUFhLENBQUE7SUFDYiwyQ0FBRyxDQUFBO0lBQ0gsNkNBQUksQ0FBQTtBQUNSLENBQUMsRUFSVyxXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQVF0QjtBQUVELE1BQXFCLFNBQVUsU0FBUSxxQ0FBcUI7SUFBNUQ7O1FBTzhCLHFCQUFnQixHQUFnQixXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsNkNBQTZDO0lBK0o3SCxDQUFDO0lBN0pHLG1FQUFtRTtJQUNuRSxLQUFLO1FBRUQsb0JBQW9CO1FBQ3BCLElBL0JDLHFDQUFxQixDQXdMeUUsYUFBYyxDQXpKekcsU0FBUyxDQUFDLFFBQVEsRUFBSSxJQUFJO1lBQUUsd0JBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDOztZQUMvRCxTQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNuQyxDQUFDO0lBRUQsc0RBQXNEO0lBQy9DLElBQUk7UUFFUCxJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxDQUFDLHVCQUF1QjtRQUUzQyxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFDdkQ7WUFDSSxtRUFBbUU7WUFDbkUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJ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","assetPath":"Assets/FashionBattle_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"uiPanelsGameObject","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"currentPanelType","type":"UIPanelType","isArray":false,"initValue":["NONE"],"enumKeys":["START","LOBBY","GAME","CUSTOMIZATION","END","NONE"],"enumValues":["0","1","2","3","4","5"],"attributes":[{"name":"HideInInspector","args":[]}]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 3e3cefa35febbc19ea15b0d362a023f2
  onlyWriteTrigger: 0
