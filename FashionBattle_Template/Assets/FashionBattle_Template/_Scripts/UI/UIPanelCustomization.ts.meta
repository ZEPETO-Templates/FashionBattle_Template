fileFormatVersion: 2
guid: e60aaf9e0b8890b4086bfbf128e2cd64
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst ZEPETO_World_Gui_1 = require(\"ZEPETO.World.Gui\");\r\nconst
    CustomizationButton_1 = require(\"./CustomizationButton\");\r\nconst GameManager_1
    = require(\"../Managers/GameManager\");\r\nconst MultiplayerManager_1 = require(\"../Multiplayer/MultiplayerManager\");\r\nconst
    ClothingManager_1 = require(\"../Managers/ClothingManager\");\r\nconst CustomButton_1
    = require(\"./CustomButton\");\r\n// This class controls the view of the panel
    for customization options.\r\nclass UIPanelCustomization extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isCounterRunning
    = false; // Indicates whether a counter is currently running \r\n        this.bodyPartSelected
    = BODYPART_SELECTION.HEAD;\r\n    }\r\n    // Start is called on the frame when
    a script is enabled just before any of the Update methods is called the first
    time\r\n    Start() {\r\n        // We obtain and save the Game Manager customization
    time limit value\r\n        this.timeCounter = GameManager_1.default.instance.customizationTimeLimit;\r\n       
    this.timeSlider.maxValue = GameManager_1.default.instance.customizationTimeLimit;\r\n       
    // We change the value of the counter is running to true\r\n        this.isCounterRunning
    = true;\r\n        // We hide the waiting screen\r\n        this.waitingContainer.SetActive(false);\r\n       
    // We obtain and set Customization Button\r\n        this.itemButtons.forEach((element)
    => {\r\n            // We set the parent\r\n            element.GetComponent($typeof(CustomizationButton_1.default)).SetUiParentPanel(this.gameObject);\r\n       
    });\r\n        // Fist Populate\r\n        this.PopulateButtons(BODYPART_SELECTION.HEAD);\r\n       
    this.HighlightButtons(0);\r\n        // We add action on click the hats button\r\n       
    this.selectionButtons[0].OnClick.AddListener(() => {\r\n            // Call the
    PopulateButtons with HEAD value\r\n            this.PopulateButtons(BODYPART_SELECTION.HEAD);\r\n           
    // Call the function HighlightButtons with value 0\r\n            this.HighlightButtons(0);\r\n           
    // Call the function OnSelectItemButton\r\n            this.SwitchOffAllItemButtons();\r\n       
    });\r\n        // We add action on click the chest button    \r\n        this.selectionButtons[1].OnClick.AddListener(()
    => {\r\n            // Call the function PopulateButtons with CHEST value\r\n           
    this.PopulateButtons(BODYPART_SELECTION.CHEST);\r\n            // Call the function
    HighlightButtons with value 1\r\n            this.HighlightButtons(1);\r\n           
    // Call the function OnSelectItemButton\r\n            this.SwitchOffAllItemButtons();\r\n       
    });\r\n        // We add action on click the legs button    \r\n        this.selectionButtons[2].OnClick.AddListener(()
    => {\r\n            // Call the function PopulateButtons with LEGS value\r\n           
    this.PopulateButtons(BODYPART_SELECTION.LEGS);\r\n            // Call the function
    HighlightButtons with value 2\r\n            this.HighlightButtons(2);\r\n           
    // Call the function OnSelectItemButton\r\n            this.SwitchOffAllItemButtons();\r\n       
    });\r\n        // We add action on click the shoes button  \r\n        this.selectionButtons[3].OnClick.AddListener(()
    => {\r\n            // Call the function PopulateButtons with SHOES value\r\n           
    this.PopulateButtons(BODYPART_SELECTION.SHOES);\r\n            // Call the function
    HighlightButtons with value 3\r\n            this.HighlightButtons(3);\r\n           
    // Call the function OnSelectItemButton\r\n            this.SwitchOffAllItemButtons();\r\n       
    });\r\n        // We add action on click the done button\r\n        this.doneButton.OnClick.AddListener(()
    => {\r\n            // We change the value of the counter is running to false\r\n           
    this.isCounterRunning = false;\r\n            // We show the waiting screen\r\n           
    this.waitingContainer.SetActive(true);\r\n            // We set the value of
    the time counter to cero\r\n            this.timeCounter = 0;\r\n           
    // We set the value of the time slider to cero\r\n            this.timeSlider.value
    = 0;\r\n            // Call the function OnPlayerDoneCustomize with value true\r\n           
    GameManager_1.default.instance.OnPlayerDoneCustomize(true);\r\n        });\r\n   
    }\r\n    // This method resets the UI panel to its initial state for customization.\r\n   
    ResetPanel() {\r\n        this.timeCounter = GameManager_1.default.instance.customizationTimeLimit;
    // Set the time counter\r\n        this.timeSlider.maxValue = GameManager_1.default.instance.customizationTimeLimit;
    // Set the time slider''s maximum value\r\n        this.isCounterRunning = true;
    // Start the counter\r\n        this.waitingContainer.SetActive(false); // Hide
    the waiting container\r\n        this.PopulateButtons(BODYPART_SELECTION.HEAD);\r\n       
    this.HighlightButtons(0);\r\n        this.SwitchOffAllItemButtons();\r\n    }\r\n   
    // Update is called every frame, if the MonoBehaviour is enabled\r\n    Update()
    {\r\n        // Check if the value of counter is running is true\r\n        if
    (this.isCounterRunning) {\r\n            // We subtract 1 real second from the
    counter\r\n            this.timeCounter -= UnityEngine_1.Time.deltaTime;\r\n           
    // We update value of the slider\r\n            this.timeSlider.value = this.timeCounter;\r\n           
    // Check if the counter values is minor of cero\r\n            if (this.timeCounter
    <= 0) {\r\n                // We change the value of the counter is running to
    false\r\n                this.isCounterRunning = false;\r\n                //
    Call the function OnPlayerDoneCustomize with value true\r\n                GameManager_1.default.instance.OnPlayerDoneCustomize(true);\r\n           
    }\r\n        }\r\n    }\r\n    // This methos is used to populate buttons\r\n   
    PopulateButtons(selection) {\r\n        // We Create a variable to store a temporary
    number\r\n        let i = 0;\r\n        // Check if the case is equal selection
    value\r\n        switch (selection) {\r\n            // When is \"HEAD\"\r\n           
    case BODYPART_SELECTION.HEAD:\r\n                this.itemButtons.forEach((element)
    => {\r\n                    // We obtain and set Customization Button \r\n                   
    element.GetComponent($typeof(CustomizationButton_1.default)).SetItemId(MultiplayerManager_1.ITEM_TYPE.HEAD,
    ClothingManager_1.default.instance.headItems[i]);\r\n                    i++;\r\n               
    });\r\n                break;\r\n            // When is \"CHEST\"\r\n           
    case BODYPART_SELECTION.CHEST:\r\n                this.itemButtons.forEach((element)
    => {\r\n                    // We obtain and set Customization Button\r\n                   
    element\r\n                        .GetComponent($typeof(CustomizationButton_1.default)).SetItemId(MultiplayerManager_1.ITEM_TYPE.CHEST,
    ClothingManager_1.default.instance.chestItems[i]);\r\n                    i++;\r\n               
    });\r\n                break;\r\n            // When is \"LEGS\"  \r\n           
    case BODYPART_SELECTION.LEGS:\r\n                this.itemButtons.forEach((element)
    => {\r\n                    // We obtain and set Customization Button\r\n                   
    element\r\n                        .GetComponent($typeof(CustomizationButton_1.default)).SetItemId(MultiplayerManager_1.ITEM_TYPE.LEGS,
    ClothingManager_1.default.instance.legsItems[i]);\r\n                    i++;\r\n               
    });\r\n                break;\r\n            // When is \"SHOES\"\r\n           
    case BODYPART_SELECTION.SHOES:\r\n                this.itemButtons.forEach((element)
    => {\r\n                    // We obtain and set Customization Button\r\n                   
    element\r\n                        .GetComponent($typeof(CustomizationButton_1.default)).SetItemId(MultiplayerManager_1.ITEM_TYPE.FOOT,
    ClothingManager_1.default.instance.shoesItems[i]);\r\n                    i++;\r\n               
    });\r\n                break;\r\n        }\r\n    }\r\n    // This method is
    used to highlight buttons\r\n    HighlightButtons(index) {\r\n        // We reset
    all highlight buttons\r\n        for (let i = 0; i < this.selectionButtons.length;
    i++) {\r\n            this.selectionButtons[i].GetComponent($typeof(CustomButton_1.default)).ResetButton();\r\n       
    }\r\n        // We set highlight button\r\n        this.selectionButtons[index].GetComponent($typeof(CustomButton_1.default)).SelectButton();\r\n   
    }\r\n    // This method is used to show or hide loading screen\r\n    SetLoadingPanel(value)
    {\r\n        this.loadingPanel.SetActive(value);\r\n    }\r\n    // This method
    is used to switch off the highlight item buttons\r\n    SwitchOffAllItemButtons()
    {\r\n        this.itemButtons.forEach((element) => {\r\n            element.GetComponent($typeof(CustomizationButton_1.default)).SetSelected(false);\r\n       
    });\r\n    }\r\n}\r\nexports.default = UIPanelCustomization;\r\nvar BODYPART_SELECTION;\r\n(function
    (BODYPART_SELECTION) {\r\n    BODYPART_SELECTION[\"HEAD\"] = \"Head\";\r\n   
    BODYPART_SELECTION[\"CHEST\"] = \"Chest\";\r\n    BODYPART_SELECTION[\"LEGS\"]
    = \"Legs\";\r\n    BODYPART_SELECTION[\"SHOES\"] = \"Shoes\";\r\n})(BODYPART_SELECTION
    || (BODYPART_SELECTION = {}));\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlQYW5lbEN1c3RvbWl6YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJVSVBhbmVsQ3VzdG9taXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUErQztBQUMvQyxpREFBc0Q7QUFDdEQsdURBQTBEO0FBQzFELCtEQUF3RDtBQUV4RCx5REFBa0Q7QUFDbEQsMEVBQThEO0FBQzlELGlFQUEwRDtBQUMxRCxpREFBMEM7QUFFMUMsdUVBQXVFO0FBQ3ZFLE1BQXFCLG9CQUFxQixTQUFRLHFDQUFxQjtJQUF2RTs7UUFLNEIscUJBQWdCLEdBQVMsS0FBSyxDQUFDLENBQUMsb0RBQW9EO1FBWXZHLHFCQUFnQixHQUF1QixrQkFBa0IsQ0FBQyxJQUFJLENBQUM7SUEyTXhFLENBQUM7SUF6TUMsdUhBQXVIO0lBQ3ZILEtBQUs7UUFFSCxxRUFBcUU7UUFDckUsSUFBSSxDQUFDLFdBQVcsR0FBRyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQztRQUMvRCxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQztRQUN2RSx3REFBd0Q7UUFDeEQsSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztRQUU3Qiw2QkFBNkI7UUFDN0IsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUV2Qyx5Q0FBeUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUVuQyxvQkFBb0I7WUFDcEIsT0FBTyxDQUFDLFlBQVksU0FBQyw2QkFBbUIsR0FBSSxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDaEYsQ0FBQyxDQUFDLENBQUM7UUFFSCxnQkFBZ0I7UUFDaEIsSUFBSSxDQUFDLGVBQWUsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5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","assetPath":"Assets/FashionBattle_Template/_Scripts/UI/UIPanelCustomization.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"timeSlider","type":"UnityEngine.UI.Slider","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Time\""]}]},{"assembly":"mscorlib","name":"isCounterRunning","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"timeCounter","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"loadingPanel","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"waitingContainer","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World.Gui","name":"doneButton","type":"ZEPETO.World.Gui.RoundedRectangleButton","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"ZEPETO.World.Gui","name":"selectionButtons","type":"ZEPETO.World.Gui.RoundedRectangleButton[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"itemButtons","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"bodyPartSelected","type":"BODYPART_SELECTION","isArray":false,"initValue":["HEAD"],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"UIPanelCustomization","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 16f3f2db03a75e56379dabc24d68a3e9
  onlyWriteTrigger: 0
