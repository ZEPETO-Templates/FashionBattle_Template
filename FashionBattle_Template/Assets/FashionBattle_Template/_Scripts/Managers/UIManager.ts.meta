fileFormatVersion: 2
guid: 5e3a5b19c3aa80745b3d605121e2690e
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nexports.UIPanelType = void 0;\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst UIPanel_1 = require(\"../UI/UIPanel\");\r\nconst
    UIPanelStart_1 = require(\"../UI/UIPanelStart\");\r\nconst UIPanelGame_1 = require(\"../UI/UIPanelGame\");\r\nconst
    UIPanelEnd_1 = require(\"../UI/UIPanelEnd\");\r\nconst UIPanelCustomization_1
    = require(\"../UI/UIPanelCustomization\");\r\nvar UIPanelType;\r\n(function (UIPanelType)
    {\r\n    UIPanelType[UIPanelType[\"START\"] = 0] = \"START\";\r\n    UIPanelType[UIPanelType[\"LOBBY\"]
    = 1] = \"LOBBY\";\r\n    UIPanelType[UIPanelType[\"GAME\"] = 2] = \"GAME\";\r\n   
    UIPanelType[UIPanelType[\"CUSTOMIZATION\"] = 3] = \"CUSTOMIZATION\";\r\n    UIPanelType[UIPanelType[\"END\"]
    = 4] = \"END\";\r\n    UIPanelType[UIPanelType[\"NONE\"] = 5] = \"NONE\";\r\n})(UIPanelType
    = exports.UIPanelType || (exports.UIPanelType = {}));\r\nclass UIManager extends
    ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor() {\r\n        super(...arguments);\r\n       
    this.currentPanelType = UIPanelType.NONE; // This variable saves the current
    panel type\r\n    }\r\n    // Awake is called when an enabled script instance
    is being loaded.\r\n    Awake() {\r\n        // Singleton pattern\r\n       
    if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIManager.instance, null))\r\n           
    UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n        else\r\n           
    UIManager.instance = this;\r\n    }\r\n    // This method is responsible for
    starting all systems\r\n    Init() {\r\n        this.uiPanels = []; //First start
    the array\r\n        for (var i = 0; i < this.uiPanelsGameObject.length; i++)
    {\r\n            //Then, get the reference of the scripts of each panel in the
    scene\r\n            this.uiPanels[i] = this.uiPanelsGameObject[i].GetComponent($typeof(UIPanel_1.default));\r\n       
    }\r\n    }\r\n    // This method is used to update the next player to vote\r\n   
    SetNewxtPlayerToVote(playerId) {\r\n        // We obtain the component UIPanelGame\r\n       
    let gamePanel = this.GetUiPanelType(UIPanelType.GAME).GetComponent($typeof(UIPanelGame_1.default));\r\n       
    // Call the function SetNextPlayerToVote with the player identifier value\r\n       
    gamePanel.SetNextPlayerToVote(playerId);\r\n    }\r\n    // This method is used
    to update the winner data\r\n    SetWinnerPanelData(winnername, winnerscore)
    {\r\n        // We obtain the component UIPanelEnd\r\n        let endPanel =
    this.GetUiPanelType(UIPanelType.END).GetComponent($typeof(UIPanelEnd_1.default));\r\n       
    // Call the function SetEndPanelData with the winner name and winner score value\r\n       
    endPanel.SetEndPanelData(winnername, winnerscore);\r\n    }\r\n    // This method
    is used to show loading panel\r\n    SetLoadingPanel(value) {\r\n        // We
    obtain the component UIPanelCustomization\r\n        let customizationPanel =
    this.GetUiPanelType(UIPanelType.CUSTOMIZATION).GetComponent($typeof(UIPanelCustomization_1.default));\r\n       
    // Call the function SetLoadingPanel with the new value\r\n        customizationPanel.SetLoadingPanel(value);\r\n   
    }\r\n    // This method is used to show voting panel\r\n    SetVotingPanel(value)
    {\r\n        // We obtain the component UIPanelGame\r\n        let gamePanel
    = this.GetUiPanelType(UIPanelType.GAME).GetComponent($typeof(UIPanelGame_1.default));\r\n       
    // Call the function SetVotingPanel with the new value\r\n        gamePanel.SetVotingPanel(value);\r\n   
    }\r\n    // This mehod is used when click on start button\r\n    OnStartButton()
    {\r\n        // Call the function SwitchUIPanel with value CUSTOMIZATION\r\n       
    this.SwitchUIPanel(UIPanelType.CUSTOMIZATION);\r\n    }\r\n    //This method
    reset the Customization panel\r\n    ResetCustomizationPanel() {\r\n        //
    We obtain the component UIPanelCustomization\r\n        let customizationPanel
    = this.GetUiPanelType(UIPanelType.CUSTOMIZATION).GetComponent($typeof(UIPanelCustomization_1.default));\r\n       
    // Call the function ResetPanel\r\n        customizationPanel.ResetPanel();\r\n   
    }\r\n    //This method reset the Start panel\r\n    ResetStartPanel() {\r\n       
    // We obtain the component UIPanelStart\r\n        let startPanel = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function ResetPanel\r\n        startPanel.ResetPanel();\r\n    }\r\n   
    // This method is used to update the counter to start game\r\n    SetCounterToStart(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function ShowCountdownText with the new value\r\n        startPanel.ShowCountdownText(value);\r\n   
    }\r\n    // This method is used to set all players in game\r\n    SetPlayersOnline(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetPlayersCount with the new value\r\n        startPanel.SetPlayersCount(value);\r\n   
    }\r\n    // This method is used to set all ready players\r\n    SetPlayersReady(value)
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetPlayersReady with the new value\r\n        startPanel.SetPlayersReady(value);\r\n   
    }\r\n    // This method is used to set ready button interactable\r\n    SetReadyButtonInteractable()
    {\r\n        // We obtain the component UIPanelStart\r\n        let startPanel
    = this.GetUiPanelType(UIPanelType.START).GetComponent($typeof(UIPanelStart_1.default));\r\n       
    // Call the function SetReadyButtonInteractable\r\n        startPanel.SetReadyButtonInteractable();\r\n   
    }\r\n    //This method controls the visual panels, recive the UIPanelType and
    find it in all panels for activate.\r\n    SwitchUIPanel(uiPanelType) {\r\n       
    //We change the current panel type for the new one\r\n        this.currentPanelType
    = uiPanelType;\r\n        //We go through all the references of the ui panels\r\n       
    for (var i = 0; i < this.uiPanels.length; i++) {\r\n            //Check if the
    type in \"i\" is the same as the new one\r\n            if (this.uiPanels[i].uiPanelType
    == uiPanelType) {\r\n                //If it is correct, activate the panel with
    the corresponding type\r\n                this.uiPanels[i].Show(true);\r\n           
    }\r\n            else {\r\n                //If it is not correct, deactivate
    the panel\r\n                this.uiPanels[i].Show(false);\r\n            }\r\n       
    }\r\n    }\r\n    //This method returns a panel with the correct UIPanel type\r\n   
    GetUiPanelType(uiPanelType) {\r\n        let result = this.uiPanels[i];\r\n       
    for (var i = 0; i < this.uiPanels.length; i++) {\r\n            if (this.uiPanels[i].uiPanelType
    == uiPanelType) {\r\n                result = this.uiPanels[i];\r\n           
    }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.default = UIManager;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlNYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUErQztBQUMvQyxpREFBcUQ7QUFDckQsMkNBQW9DO0FBQ3BDLHFEQUE4QztBQUM5QyxtREFBNEM7QUFDNUMsaURBQTBDO0FBQzFDLHFFQUE4RDtBQUU5RCxJQUFZLFdBUVg7QUFSRCxXQUFZLFdBQVc7SUFFbkIsK0NBQUssQ0FBQTtJQUNMLCtDQUFLLENBQUE7SUFDTCw2Q0FBSSxDQUFBO0lBQ0osK0RBQWEsQ0FBQTtJQUNiLDJDQUFHLENBQUE7SUFDSCw2Q0FBSSxDQUFBO0FBQ1IsQ0FBQyxFQVJXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBUXRCO0FBRUQsTUFBcUIsU0FBVSxTQUFRLHFDQUFxQjtJQUE1RDs7UUFPOEIscUJBQWdCLEdBQWdCLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyw2Q0FBNkM7SUEySjdILENBQUM7SUF6SkcsbUVBQW1FO0lBQ25FLEtBQUs7UUFFRCxvQkFBb0I7UUFDcEIsSUE5QkMscUNBQXFCLENBbUwwUyxhQUFjLENBckoxVSxTQUFTLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRSx3QkFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7O1lBQy9ELFNBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ25DLENBQUM7SUFFRCxzREFBc0Q7SUFDL0MsSUFBSTtRQUVQLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLENBQUMsdUJBQXVCO1FBRTNDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUN2RDtZQUNJLG1FQUFtRTtZQUNuRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxrQkFBa0Is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","assetPath":"Assets/FashionBattle_Template/_Scripts/Managers/UIManager.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"uiPanelsGameObject","type":"UnityEngine.GameObject[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"","name":"currentPanelType","type":"UIPanelType","isArray":false,"initValue":["NONE"],"enumKeys":["START","LOBBY","GAME","CUSTOMIZATION","END","NONE"],"enumValues":["0","1","2","3","4","5"],"attributes":[{"name":"HideInInspector","args":[]}]}],"name":"UIManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 0344493d03c2bdaf35336a1681b71df5
  onlyWriteTrigger: 0
