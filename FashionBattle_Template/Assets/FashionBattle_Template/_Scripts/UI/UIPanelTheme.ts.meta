fileFormatVersion: 2
guid: f48c77bf2d97b0f4c98aca97bbbe8c05
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    UnityEngine_1 = require(\"UnityEngine\");\r\nconst GameManager_1 = require(\"../Managers/GameManager\");\r\n//
    This class controls the theme panel\r\nclass UIPanelTheme extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isCounterRunning
    = false; // Flag indicating whether the counter is running\r\n        this.theme
    = false; // Flag to know if there are themes\r\n    }\r\n    // Awake is called
    when an enabled script instance is being loaded.\r\n    Awake() {\r\n       
    // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(UIPanelTheme.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            UIPanelTheme.instance = this;\r\n    }\r\n    // Start is
    called on the frame when a script is enabled just before any of the Update methods
    are called the first time\r\n    Start() {\r\n    }\r\n    // Update is called
    every frame, if the MonoBehaviour is enabled\r\n    Update() {\r\n        //
    Check if the value of counter is running is true\r\n        if (this.isCounterRunning)
    {\r\n            // We subtract 1 real second from the counter\r\n           
    this.timeCounter -= UnityEngine_1.Time.deltaTime;\r\n            // We update
    value of the slider\r\n            this.timeSlider.value = this.timeCounter;\r\n           
    // Check if the counter values is minor of cero\r\n            if (this.timeCounter
    <= 0) {\r\n                // We change the value of the counter is running to
    false\r\n                this.isCounterRunning = false;\r\n                GameManager_1.default.instance.theme
    = true;\r\n                GameManager_1.default.instance.StartCustomization();\r\n           
    }\r\n        }\r\n    }\r\n    // This method get a random theme \r\n    GetTextThemeRandom()
    {\r\n        // Check if themeText is null or empty\r\n        if (this.themeText
    == null || this.themeText.length === 0) {\r\n            return;\r\n        }\r\n       
    const randomT = Math.floor(Math.random() * this.themeText.length);\r\n       
    return this.themeText[randomT];\r\n    }\r\n    // This method is responsible
    to reset panel\r\n    ResetThemePanel() {\r\n        this.timeCounter = 5;\r\n       
    GameManager_1.default.instance.theme = false;\r\n        this.isCounterRunning
    = false; // Start the counter\r\n        //const selectTheme = this.GetTextThemeRandom();
    // Get a random theme \r\n        // this.selectThemeText.text = selectTheme;
    //    // Set text to the selectThemeText\r\n    }\r\n    StartTheme() {\r\n       
    this.timeCounter = 5;\r\n        this.timeSlider.maxValue = GameManager_1.default.instance.customizationTimeTheme;
    // Set the maximum value of the time slider from GameManager\r\n        this.isCounterRunning
    = true; // Start the counter\r\n        const selectTheme = this.GetTextThemeRandom();
    // Get a random theme \r\n        this.selectThemeText.text = selectTheme; //   
    // Set text to the selectThemeText\r\n    }\r\n}\r\nexports.default = UIPanelTheme;\r\n//#
    sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVUlQYW5lbFRoZW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVUlQYW5lbFRoZW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsaURBQXFEO0FBRXJELDZDQUErQztBQUUvQyx5REFBa0Q7QUFFbEQsc0NBQXNDO0FBQ3RDLE1BQXFCLFlBQWEsU0FBUSxxQ0FBcUI7SUFBL0Q7O1FBTThCLHFCQUFnQixHQUFTLEtBQUssQ0FBQyxDQUFFLGlEQUFpRDtRQU1sRixVQUFLLEdBQVMsS0FBSyxDQUFDLENBQUUsbUNBQW1DO0lBaUV2RixDQUFDO0lBL0RHLG1FQUFtRTtJQUNuRSxLQUFLO1FBRUgsb0JBQW9CO1FBQ3BCLElBekJHLHFDQUFxQixDQW9GbXhILGFBQWMsQ0EzRHJ6SCxZQUFZLENBQUMsUUFBUSxFQUFJLElBQUk7WUFBRSx3QkFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7O1lBQ2xFLFlBQVksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDO0lBQ3BDLENBQUM7SUFFTCx3SEFBd0g7SUFDcEgsS0FBSztJQUVMLENBQUM7SUFFRixnRUFBZ0U7SUFDaEUsTUFBTTtRQUVKLG1EQUFtRDtRQUNuRCxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsRUFDekI7WUFDRSw2Q0FBNkM7WUFDN0MsSUFBSSxDQUFDLFdBQVcsSUFBSSxrQkFBSSxDQUFDLFNBQVMsQ0FBQztZQUNuQyxnQ0FBZ0M7WUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUV6QywrQ0FBK0M7WUFDL0MsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsRUFDekI7Z0JBQ0UseURBQXlEO2dCQUN6RCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO2dCQUM5QixxQkFBVyxDQUFDLFFBQVEsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxxQkFBVyxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO2FBQzNDO1NBQ0Y7SUFDSCxDQUFDO0lBRUosa0NBQWtDO0lBQ3hCLGtCQUFrQjtRQUN2QixzQ0FBc0M7UUFDdkMsSUFBSSxJQUFJLENBQUMsU0FBUyxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDdkQsT0FBTztTQUNWO1FBQ0QsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNsRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUdDLDRDQUE0QztJQUNyQyxlQUFlO1FBRWpCLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLHFCQUFXLENBQUMsUUFBUSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkMsSUFBSSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQyxDQUFDLG9CQUFvQjtRQUNuRCx1RUFBdUU7UUFDeEUsb0ZBQW9GO0lBQ3ZGLENBQUM7SUFFTSxVQUFVO1FBQ2IsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEdBQUcscUJBQVcsQ0FBQyxRQUFRLENBQUMsc0JBQXNCLENBQUMsQ0FBRyw0REFBNEQ7UUFDdEksSUFBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQyxDQUFDLG9CQUFvQjtRQUNsRCxNQUFNLFdBQVcsR0FBRyxJQUFJLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxDQUFDLHNCQUFzQjtRQUNyRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksR0FBRyxXQUFXLENBQUMsQ0FBQyx3Q0FBd0M7SUFDbkYsQ0FBQztDQUNGO0FBN0VELCtCQTZFQyJ9","assetPath":"Assets/FashionBattle_Template/_Scripts/UI/UIPanelTheme.ts","manifest":{"properties":[{"assembly":"UnityEngine.UI","name":"timeSlider","type":"UnityEngine.UI.Slider","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Time\""]}]},{"assembly":"mscorlib","name":"isCounterRunning","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"timeCounter","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"ZEPETO.World.Gui","name":"selectThemeText","type":"ZEPETO.World.Gui.ZepetoText","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"themeText","type":"System.String[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Themes\""]}]},{"assembly":"mscorlib","name":"theme","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]}],"name":"UIPanelTheme","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 9cd4983f543e358791a161c27b308da4
  onlyWriteTrigger: 0
