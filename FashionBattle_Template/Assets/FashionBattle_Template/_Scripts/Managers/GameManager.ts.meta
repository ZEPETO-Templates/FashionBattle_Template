fileFormatVersion: 2
guid: d7282ca797582a5488ae9d686c99c853
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\n/** @format */\r\nObject.defineProperty(exports,
    \"__esModule\", { value: true });\r\nexports.STAGE = void 0;\r\nconst ZEPETO_Script_1
    = require(\"ZEPETO.Script\");\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    MultiplayerManager_1 = require(\"../Multiplayer/MultiplayerManager\");\r\nconst
    ZEPETO_Character_Controller_1 = require(\"ZEPETO.Character.Controller\");\r\nconst
    UIManager_1 = require(\"./UIManager\");\r\nconst PlayerSpawner_1 = require(\"../Multiplayer/PlayerSpawner\");\r\nvar
    STAGE;\r\n(function (STAGE) {\r\n    STAGE[STAGE[\"START\"] = 0] = \"START\";\r\n   
    STAGE[STAGE[\"CUSTOMIZATION\"] = 1] = \"CUSTOMIZATION\";\r\n    STAGE[STAGE[\"RUNWAY\"]
    = 2] = \"RUNWAY\";\r\n    STAGE[STAGE[\"ENDGAME\"] = 3] = \"ENDGAME\";\r\n})(STAGE
    = exports.STAGE || (exports.STAGE = {}));\r\nclass GameManager extends ZEPETO_Script_1.ZepetoScriptBehaviour
    {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isPlayerReady
    = false; // Flag to know if all the players are ready\r\n        this.isGameStarted
    = false; // Flag to know if the game are started\r\n        this.playersReady
    = false; // Flag to know if all the players are ready\r\n        this.counterToStart
    = 10; //Counter used to update when all players are ready\r\n        this.voteTimerLimit
    = 10; //Total time for voting\r\n        this.customizationTimeLimit = 10; //Total
    time for customization\r\n        // Runway\r\n        this.currentPlayerIndexInRunway
    = 0; // This variable saves the current player index in runway\r\n        this.totalPlayersInRunway
    = 0; // This variable saves the total players in runway\r\n    }\r\n    // Awake
    is called when an enabled script instance is being loaded.\r\n    Awake() {\r\n       
    // Singleton pattern\r\n        if (ZEPETO_Script_1.ZepetoScriptBehaviour.op_Inequality(GameManager.instance,
    null))\r\n            UnityEngine_1.GameObject.Destroy(this.gameObject);\r\n       
    else\r\n            GameManager.instance = this;\r\n    }\r\n    // Start is
    called on the frame when a script is enabled just before any of the Update methods
    are called the first time\r\n    Start() {\r\n        // Call the function InitGame\r\n       
    this.InitGame();\r\n    }\r\n    // Update is called every frame, if the MonoBehaviour
    is enabled\r\n    Update() {\r\n        // Check if the playersReady value is
    true and isGameStarted value is false\r\n        if (this.playersReady && !this.isGameStarted)
    {\r\n            // We subtract 1 real second from the counter\r\n           
    this.counterToStart -= UnityEngine_1.Time.deltaTime;\r\n            // Check
    if the counter values is minor of cero\r\n            if (this.counterToStart
    < 0) {\r\n                // We set the isGameStarted value to true\r\n               
    this.isGameStarted = true;\r\n                // Call the SwitchUIPanel function
    to switch to the Customization panel\r\n                UIManager_1.default.instance.SwitchUIPanel(UIManager_1.UIPanelType.CUSTOMIZATION);\r\n               
    // Call the function SwitchStage\r\n                this.SwitchStage(STAGE.CUSTOMIZATION);\r\n           
    }\r\n        }\r\n    }\r\n    // This method is responsible for starting all
    systems\r\n    InitGame() {\r\n        UIManager_1.default.instance.Init();\r\n       
    this.StartGame();\r\n    }\r\n    // This method is responsible for starting
    the game\r\n    StartGame() {\r\n        this.isGameStarted = false;\r\n       
    this.isPlayerReady = false;\r\n        this.counterToStart = this.timeToStart;\r\n       
    this.SwitchStage(STAGE.START);\r\n    }\r\n    //This method is responsible for
    controlling the stages and panels that are displayed on the screen\r\n    SwitchStage(stage)
    {\r\n        // We save the current stage\r\n        this._currentStage = stage;\r\n       
    // We disable all stages screens.\r\n        this.stageCustomization.SetActive(false);\r\n       
    this.stageRunway.SetActive(false);\r\n        this.stageWinner.SetActive(false);\r\n       
    // Check in the all stages types\r\n        switch (stage) {\r\n            //
    When current stage is \"START\"\r\n            case STAGE.START:\r\n               
    // We reset all panels       \r\n                UIManager_1.default.instance.ResetStartPanel();\r\n               
    // And we switch the current UI for start game\r\n                UIManager_1.default.instance.SwitchUIPanel(UIManager_1.UIPanelType.START);\r\n               
    break;\r\n            // When current stage is \"CUSTOMIZATION\"        \r\n           
    case STAGE.CUSTOMIZATION:\r\n                UIManager_1.default.instance.ResetCustomizationPanel();\r\n               
    MultiplayerManager_1.default.instance.ResetPlayerData();\r\n                MultiplayerManager_1.default.instance.SendResetVoteCache();\r\n               
    MultiplayerManager_1.default.instance.RequestVoteDataCache();\r\n               
    // We activate the customization screen        \r\n                this.stageCustomization.SetActive(true);\r\n               
    PlayerSpawner_1.default.instance.ShowCharacterOriginal(MultiplayerManager_1.default.instance.localPlayerData.ownerSessionId);\r\n               
    PlayerSpawner_1.default.instance.ResetPreviewData(MultiplayerManager_1.default.instance.localPlayerData.ownerSessionId);\r\n               
    break;\r\n            // When current stage is \"RUNWAY\"         \r\n           
    case STAGE.RUNWAY:\r\n                // We hide the current player\r\n               
    PlayerSpawner_1.default.instance.HideCurrentZepetoPlayer();\r\n               
    // We activate the runway screen\r\n                this.stageRunway.SetActive(true);\r\n               
    // Set the current player index in 0\r\n                this.currentPlayerIndexInRunway
    = 0;\r\n                // Set the total players in runway by the all players
    in game\r\n                this.totalPlayersInRunway =\r\n                   
    MultiplayerManager_1.default.instance.playersData.length;\r\n               
    // Call to the function SetNextPlayerInRunway\r\n                this.SetNextPlayerInRunway();\r\n               
    break;\r\n            // When current stage is \"ENDGAME\"           \r\n           
    case STAGE.ENDGAME:\r\n                // We activate the winner screen\r\n               
    this.stageWinner.SetActive(true);\r\n                // Call to the function
    OnGameOver\r\n                this.OnGameOver();\r\n                break;\r\n       
    }\r\n    }\r\n    //This method is in charge of restarting the game\r\n    RestartGame()
    {\r\n        // We hide the current player\r\n        PlayerSpawner_1.default.instance.HideCurrentZepetoPlayer();\r\n       
    this.SetGameReadyToStart(false);\r\n        // Call to the function StartGame\r\n       
    this.StartGame();\r\n    }\r\n    //This method is responsible for showing the
    characters on the runway\r\n    SetNextPlayerInRunway() {\r\n        MultiplayerManager_1.default.instance.RequestVoteDataCache();\r\n       
    if (this.currentPlayerIndexInRunway != 0) {\r\n            // We hide the current
    player\r\n            PlayerSpawner_1.default.instance.HideCurrentZepetoPlayer();\r\n       
    }\r\n        if (this.currentPlayerIndexInRunway >= this.totalPlayersInRunway)
    {\r\n            //If there are no more players to show, the current state ends
    and goes to finished \r\n            this.SwitchStage(STAGE.ENDGAME);\r\n       
    }\r\n        else {\r\n            //Gets the sessionId by the current Player
    Index In Runway\r\n            let playerSessionId = this.GetPlayerIdByIndex(this.currentPlayerIndexInRunway);\r\n           
    //Change the UI for the new player on the Runway\r\n            UIManager_1.default.instance.SetNewxtPlayerToVote(playerSessionId);\r\n           
    UIManager_1.default.instance.SetVotingPanel(!ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(playerSessionId).isLocalPlayer);\r\n           
    //Call the method for change player cloth\r\n            this.SetCharacterWithCloth(this.currentPlayerIndexInRunway);\r\n           
    // We upgrade the index\r\n            this.currentPlayerIndexInRunway++;\r\n       
    }\r\n    }\r\n    //This method is used to return the session identifier of a
    specific player\r\n    GetPlayerIdByIndex(index) {\r\n        return MultiplayerManager_1.default.instance.playersData[index].ownerSessionId;\r\n   
    }\r\n    // This method is used to notify the server and change current player
    in runway\r\n    OnCurrentVotingFinish() {\r\n        // Call the function SendVotingData\r\n       
    MultiplayerManager_1.default.instance.SendVotingData();\r\n        // Call the
    function SetNextPlayerInRunway\r\n        this.SetNextPlayerInRunway();\r\n   
    }\r\n    //This method is used to call the method responsible for changing the
    player''s clothes.\r\n    SetCharacterWithCloth(index) {\r\n        // Call the
    function ShowCharacterWithCloth with current player index\r\n        PlayerSpawner_1.default.instance.ShowCharacterWithCloth(MultiplayerManager_1.default.instance.playersData[index].ownerSessionId);\r\n   
    }\r\n    // This method is used to set players are ready\r\n    SetGameReadyToStart(value)
    {\r\n        //First set the playersReady with the value returns by server\r\n       
    this.playersReady = value;\r\n        //Call the function SetCounterToStart\r\n       
    UIManager_1.default.instance.SetCounterToStart(value);\r\n        // Check if
    the value is false\r\n        if (!value) {\r\n            // We set the counters
    to start game\r\n            this.counterToStart = this.timeToStart;\r\n       
    }\r\n    }\r\n    EvaluateAndSetVote() {\r\n        // We obtain the winner''s
    data\r\n        let winnerData = MultiplayerManager_1.default.instance.GetWinner();\r\n       
    // We obtain the winner''s name\r\n        let winnerName = ZEPETO_Character_Controller_1.ZepetoPlayers.instance.GetPlayer(winnerData.sessionId).name;\r\n       
    // We obtain the winner''s score\r\n        let winnerScore = winnerData.finalVote.toString();\r\n       
    // Check if the current stage is ENDGAME \r\n        if (this._currentStage ==
    STAGE.ENDGAME) {\r\n            // Call the function HideCurrentZepetoPlayer\r\n           
    PlayerSpawner_1.default.instance.HideCurrentZepetoPlayer();\r\n            //
    Call the function ShowCharacterWithCloth with winner session id     \r\n           
    PlayerSpawner_1.default.instance.ShowCharacterWithCloth(winnerData.sessionId);\r\n           
    // Call the function SetWinnerPanelData with winner name and winner score \r\n           
    UIManager_1.default.instance.SetWinnerPanelData(winnerName, winnerScore);\r\n       
    }\r\n    }\r\n    // This method is called on game over, responsible to reset
    game\r\n    OnGameOver() {\r\n        //Set the isPlayerReady to false\r\n       
    this.isPlayerReady = false;\r\n        //Call the function OnPlayerDoneCustomize
    with value false\r\n        this.OnPlayerDoneCustomize(false);\r\n        MultiplayerManager_1.default.instance.SetPlayerReady(this.isPlayerReady);\r\n       
    //Call the function SwitchUIPanel with value END\r\n        UIManager_1.default.instance.SwitchUIPanel(UIManager_1.UIPanelType.END);\r\n   
    }\r\n    // This method is used to notify the server when the local player is
    ready\r\n    OnPlayerReady() {\r\n        // We change the value of ready players
    to the new value\r\n        this.isPlayerReady = !this.isPlayerReady;\r\n       
    // Call the function SetPlayerReady\r\n        MultiplayerManager_1.default.instance.SetPlayerReady(this.isPlayerReady);\r\n   
    }\r\n    // This method is used to notify the server when the local player is
    done change customize\r\n    OnPlayerDoneCustomize(value) {\r\n        // Call
    the function SetPlayerIsCustomize\r\n        MultiplayerManager_1.default.instance.SetPlayerIsCustomize(value);\r\n   
    }\r\n    // Method to change the costume of the local player using the provided
    item code.\r\n    ChangeCostume(itemType, itemCode) {\r\n        // Use the LocalPlayer
    property to access the local player instance and set their costume using the
    provided item code.\r\n        UIManager_1.default.instance.SetLoadingPanel(true);\r\n       
    ZEPETO_Character_Controller_1.ZepetoPlayers.instance.LocalPlayer.SetCostume(itemCode,
    () => {\r\n            // Once the costume change is complete, log a message
    indicating the successful change.\r\n            console.log(`Set Costume Complete
    : $\r\n      {itemCode}`);\r\n            UIManager_1.default.instance.SetLoadingPanel(false);\r\n       
    });\r\n        MultiplayerManager_1.default.instance.SetItemInPlayerData(itemType,
    itemCode);\r\n    }\r\n}\r\nexports.default = GameManager;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/FashionBattle_Template/_Scripts/Managers/GameManager.ts","manifest":{"properties":[{"assembly":"mscorlib","name":"isPlayerReady","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"UnityEngine.CoreModule","name":"stageCustomization","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Stage
    References\""]}]},{"assembly":"UnityEngine.CoreModule","name":"stageRunway","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"stageWinner","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"isGameStarted","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"playersReady","type":"System.Boolean","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"timeToStart","type":"System.Single","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[{"name":"Header","args":["\"Settings\""]}]},{"assembly":"mscorlib","name":"counterToStart","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"voteTimerLimit","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"customizationTimeLimit","type":"System.Single","isArray":false,"initValue":["10"],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"currentPlayerIndexInRunway","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]},{"assembly":"mscorlib","name":"totalPlayersInRunway","type":"System.Single","isArray":false,"initValue":["0"],"enumKeys":[],"enumValues":[],"attributes":[{"name":"HideInInspector","args":[]}]}],"name":"GameManager","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: c7cb80a505ac6e6fa61fbb615d1fbb54
  onlyWriteTrigger: 0
